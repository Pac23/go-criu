// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sk-packet.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScmEntry struct {
	Type                 *uint32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Rights               []uint32 `protobuf:"varint,2,rep,name=rights" json:"rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScmEntry) Reset()         { *m = ScmEntry{} }
func (m *ScmEntry) String() string { return proto.CompactTextString(m) }
func (*ScmEntry) ProtoMessage()    {}
func (*ScmEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7327aa2acce2cf0, []int{0}
}

func (m *ScmEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScmEntry.Unmarshal(m, b)
}
func (m *ScmEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScmEntry.Marshal(b, m, deterministic)
}
func (m *ScmEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScmEntry.Merge(m, src)
}
func (m *ScmEntry) XXX_Size() int {
	return xxx_messageInfo_ScmEntry.Size(m)
}
func (m *ScmEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ScmEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ScmEntry proto.InternalMessageInfo

func (m *ScmEntry) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ScmEntry) GetRights() []uint32 {
	if m != nil {
		return m.Rights
	}
	return nil
}

type SkPacketEntry struct {
	IdFor  *uint32 `protobuf:"varint,1,req,name=id_for,json=idFor" json:"id_for,omitempty"`
	Length *uint32 `protobuf:"varint,2,req,name=length" json:"length,omitempty"`
	// Reserved for message address
	// optional bytes		addr	= 3;
	Scm                  []*ScmEntry `protobuf:"bytes,4,rep,name=scm" json:"scm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SkPacketEntry) Reset()         { *m = SkPacketEntry{} }
func (m *SkPacketEntry) String() string { return proto.CompactTextString(m) }
func (*SkPacketEntry) ProtoMessage()    {}
func (*SkPacketEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7327aa2acce2cf0, []int{1}
}

func (m *SkPacketEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkPacketEntry.Unmarshal(m, b)
}
func (m *SkPacketEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkPacketEntry.Marshal(b, m, deterministic)
}
func (m *SkPacketEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkPacketEntry.Merge(m, src)
}
func (m *SkPacketEntry) XXX_Size() int {
	return xxx_messageInfo_SkPacketEntry.Size(m)
}
func (m *SkPacketEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SkPacketEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SkPacketEntry proto.InternalMessageInfo

func (m *SkPacketEntry) GetIdFor() uint32 {
	if m != nil && m.IdFor != nil {
		return *m.IdFor
	}
	return 0
}

func (m *SkPacketEntry) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *SkPacketEntry) GetScm() []*ScmEntry {
	if m != nil {
		return m.Scm
	}
	return nil
}

func init() {
	proto.RegisterType((*ScmEntry)(nil), "scm_entry")
	proto.RegisterType((*SkPacketEntry)(nil), "sk_packet_entry")
}

func init() {
	proto.RegisterFile("sk-packet.proto", fileDescriptor_e7327aa2acce2cf0)
}

var fileDescriptor_e7327aa2acce2cf0 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xce, 0xd6, 0x2d,
	0x48, 0x4c, 0xce, 0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x32, 0xe7, 0xe2, 0x2c,
	0x4e, 0xce, 0x8d, 0x4f, 0xcd, 0x2b, 0x29, 0xaa, 0x14, 0x12, 0xe2, 0x62, 0x29, 0xa9, 0x2c, 0x48,
	0x95, 0x60, 0x54, 0x60, 0xd2, 0xe0, 0x0d, 0x02, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0x32, 0xd3,
	0x33, 0x4a, 0x8a, 0x25, 0x98, 0x14, 0x98, 0x81, 0xa2, 0x50, 0x9e, 0x52, 0x1c, 0xc8, 0xac, 0x78,
	0x88, 0x59, 0x50, 0xed, 0xa2, 0x5c, 0x6c, 0x99, 0x29, 0xf1, 0x69, 0xf9, 0x45, 0x50, 0x03, 0x58,
	0x33, 0x53, 0xdc, 0xf2, 0x8b, 0x40, 0x26, 0xe4, 0xa4, 0xe6, 0xa5, 0x97, 0x64, 0x00, 0x4d, 0x00,
	0x09, 0x43, 0x79, 0x42, 0x32, 0x5c, 0xcc, 0x40, 0xab, 0x25, 0x58, 0x80, 0xc6, 0x72, 0x1b, 0x71,
	0xe9, 0xc1, 0x9d, 0x11, 0x04, 0x12, 0x76, 0x12, 0x88, 0xe2, 0xd3, 0x07, 0x3b, 0x31, 0x29, 0x33,
	0x2f, 0x25, 0x33, 0x2f, 0xbd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x2b, 0x3f, 0x7c, 0xbc,
	0x00, 0x00, 0x00,
}
