// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core-arm.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserArmRegsEntry struct {
	R0                   *uint32  `protobuf:"varint,1,req,name=r0" json:"r0,omitempty"`
	R1                   *uint32  `protobuf:"varint,2,req,name=r1" json:"r1,omitempty"`
	R2                   *uint32  `protobuf:"varint,3,req,name=r2" json:"r2,omitempty"`
	R3                   *uint32  `protobuf:"varint,4,req,name=r3" json:"r3,omitempty"`
	R4                   *uint32  `protobuf:"varint,5,req,name=r4" json:"r4,omitempty"`
	R5                   *uint32  `protobuf:"varint,6,req,name=r5" json:"r5,omitempty"`
	R6                   *uint32  `protobuf:"varint,7,req,name=r6" json:"r6,omitempty"`
	R7                   *uint32  `protobuf:"varint,8,req,name=r7" json:"r7,omitempty"`
	R8                   *uint32  `protobuf:"varint,9,req,name=r8" json:"r8,omitempty"`
	R9                   *uint32  `protobuf:"varint,10,req,name=r9" json:"r9,omitempty"`
	R10                  *uint32  `protobuf:"varint,11,req,name=r10" json:"r10,omitempty"`
	Fp                   *uint32  `protobuf:"varint,12,req,name=fp" json:"fp,omitempty"`
	Ip                   *uint32  `protobuf:"varint,13,req,name=ip" json:"ip,omitempty"`
	Sp                   *uint32  `protobuf:"varint,14,req,name=sp" json:"sp,omitempty"`
	Lr                   *uint32  `protobuf:"varint,15,req,name=lr" json:"lr,omitempty"`
	Pc                   *uint32  `protobuf:"varint,16,req,name=pc" json:"pc,omitempty"`
	Cpsr                 *uint32  `protobuf:"varint,17,req,name=cpsr" json:"cpsr,omitempty"`
	OrigR0               *uint32  `protobuf:"varint,18,req,name=orig_r0,json=origR0" json:"orig_r0,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArmRegsEntry) Reset()         { *m = UserArmRegsEntry{} }
func (m *UserArmRegsEntry) String() string { return proto.CompactTextString(m) }
func (*UserArmRegsEntry) ProtoMessage()    {}
func (*UserArmRegsEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_614680b29747d7f9, []int{0}
}

func (m *UserArmRegsEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserArmRegsEntry.Unmarshal(m, b)
}
func (m *UserArmRegsEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserArmRegsEntry.Marshal(b, m, deterministic)
}
func (m *UserArmRegsEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArmRegsEntry.Merge(m, src)
}
func (m *UserArmRegsEntry) XXX_Size() int {
	return xxx_messageInfo_UserArmRegsEntry.Size(m)
}
func (m *UserArmRegsEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArmRegsEntry.DiscardUnknown(m)
}

var xxx_messageInfo_UserArmRegsEntry proto.InternalMessageInfo

func (m *UserArmRegsEntry) GetR0() uint32 {
	if m != nil && m.R0 != nil {
		return *m.R0
	}
	return 0
}

func (m *UserArmRegsEntry) GetR1() uint32 {
	if m != nil && m.R1 != nil {
		return *m.R1
	}
	return 0
}

func (m *UserArmRegsEntry) GetR2() uint32 {
	if m != nil && m.R2 != nil {
		return *m.R2
	}
	return 0
}

func (m *UserArmRegsEntry) GetR3() uint32 {
	if m != nil && m.R3 != nil {
		return *m.R3
	}
	return 0
}

func (m *UserArmRegsEntry) GetR4() uint32 {
	if m != nil && m.R4 != nil {
		return *m.R4
	}
	return 0
}

func (m *UserArmRegsEntry) GetR5() uint32 {
	if m != nil && m.R5 != nil {
		return *m.R5
	}
	return 0
}

func (m *UserArmRegsEntry) GetR6() uint32 {
	if m != nil && m.R6 != nil {
		return *m.R6
	}
	return 0
}

func (m *UserArmRegsEntry) GetR7() uint32 {
	if m != nil && m.R7 != nil {
		return *m.R7
	}
	return 0
}

func (m *UserArmRegsEntry) GetR8() uint32 {
	if m != nil && m.R8 != nil {
		return *m.R8
	}
	return 0
}

func (m *UserArmRegsEntry) GetR9() uint32 {
	if m != nil && m.R9 != nil {
		return *m.R9
	}
	return 0
}

func (m *UserArmRegsEntry) GetR10() uint32 {
	if m != nil && m.R10 != nil {
		return *m.R10
	}
	return 0
}

func (m *UserArmRegsEntry) GetFp() uint32 {
	if m != nil && m.Fp != nil {
		return *m.Fp
	}
	return 0
}

func (m *UserArmRegsEntry) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *UserArmRegsEntry) GetSp() uint32 {
	if m != nil && m.Sp != nil {
		return *m.Sp
	}
	return 0
}

func (m *UserArmRegsEntry) GetLr() uint32 {
	if m != nil && m.Lr != nil {
		return *m.Lr
	}
	return 0
}

func (m *UserArmRegsEntry) GetPc() uint32 {
	if m != nil && m.Pc != nil {
		return *m.Pc
	}
	return 0
}

func (m *UserArmRegsEntry) GetCpsr() uint32 {
	if m != nil && m.Cpsr != nil {
		return *m.Cpsr
	}
	return 0
}

func (m *UserArmRegsEntry) GetOrigR0() uint32 {
	if m != nil && m.OrigR0 != nil {
		return *m.OrigR0
	}
	return 0
}

type UserArmVfpstateEntry struct {
	VfpRegs              []uint64 `protobuf:"varint,1,rep,name=vfp_regs,json=vfpRegs" json:"vfp_regs,omitempty"`
	Fpscr                *uint32  `protobuf:"varint,2,req,name=fpscr" json:"fpscr,omitempty"`
	Fpexc                *uint32  `protobuf:"varint,3,req,name=fpexc" json:"fpexc,omitempty"`
	Fpinst               *uint32  `protobuf:"varint,4,req,name=fpinst" json:"fpinst,omitempty"`
	Fpinst2              *uint32  `protobuf:"varint,5,req,name=fpinst2" json:"fpinst2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArmVfpstateEntry) Reset()         { *m = UserArmVfpstateEntry{} }
func (m *UserArmVfpstateEntry) String() string { return proto.CompactTextString(m) }
func (*UserArmVfpstateEntry) ProtoMessage()    {}
func (*UserArmVfpstateEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_614680b29747d7f9, []int{1}
}

func (m *UserArmVfpstateEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserArmVfpstateEntry.Unmarshal(m, b)
}
func (m *UserArmVfpstateEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserArmVfpstateEntry.Marshal(b, m, deterministic)
}
func (m *UserArmVfpstateEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArmVfpstateEntry.Merge(m, src)
}
func (m *UserArmVfpstateEntry) XXX_Size() int {
	return xxx_messageInfo_UserArmVfpstateEntry.Size(m)
}
func (m *UserArmVfpstateEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArmVfpstateEntry.DiscardUnknown(m)
}

var xxx_messageInfo_UserArmVfpstateEntry proto.InternalMessageInfo

func (m *UserArmVfpstateEntry) GetVfpRegs() []uint64 {
	if m != nil {
		return m.VfpRegs
	}
	return nil
}

func (m *UserArmVfpstateEntry) GetFpscr() uint32 {
	if m != nil && m.Fpscr != nil {
		return *m.Fpscr
	}
	return 0
}

func (m *UserArmVfpstateEntry) GetFpexc() uint32 {
	if m != nil && m.Fpexc != nil {
		return *m.Fpexc
	}
	return 0
}

func (m *UserArmVfpstateEntry) GetFpinst() uint32 {
	if m != nil && m.Fpinst != nil {
		return *m.Fpinst
	}
	return 0
}

func (m *UserArmVfpstateEntry) GetFpinst2() uint32 {
	if m != nil && m.Fpinst2 != nil {
		return *m.Fpinst2
	}
	return 0
}

type ThreadInfoArm struct {
	ClearTidAddr         *uint64               `protobuf:"varint,1,req,name=clear_tid_addr,json=clearTidAddr" json:"clear_tid_addr,omitempty"`
	Tls                  *uint32               `protobuf:"varint,2,req,name=tls" json:"tls,omitempty"`
	Gpregs               *UserArmRegsEntry     `protobuf:"bytes,3,req,name=gpregs" json:"gpregs,omitempty"`
	Fpstate              *UserArmVfpstateEntry `protobuf:"bytes,4,req,name=fpstate" json:"fpstate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ThreadInfoArm) Reset()         { *m = ThreadInfoArm{} }
func (m *ThreadInfoArm) String() string { return proto.CompactTextString(m) }
func (*ThreadInfoArm) ProtoMessage()    {}
func (*ThreadInfoArm) Descriptor() ([]byte, []int) {
	return fileDescriptor_614680b29747d7f9, []int{2}
}

func (m *ThreadInfoArm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadInfoArm.Unmarshal(m, b)
}
func (m *ThreadInfoArm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadInfoArm.Marshal(b, m, deterministic)
}
func (m *ThreadInfoArm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadInfoArm.Merge(m, src)
}
func (m *ThreadInfoArm) XXX_Size() int {
	return xxx_messageInfo_ThreadInfoArm.Size(m)
}
func (m *ThreadInfoArm) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadInfoArm.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadInfoArm proto.InternalMessageInfo

func (m *ThreadInfoArm) GetClearTidAddr() uint64 {
	if m != nil && m.ClearTidAddr != nil {
		return *m.ClearTidAddr
	}
	return 0
}

func (m *ThreadInfoArm) GetTls() uint32 {
	if m != nil && m.Tls != nil {
		return *m.Tls
	}
	return 0
}

func (m *ThreadInfoArm) GetGpregs() *UserArmRegsEntry {
	if m != nil {
		return m.Gpregs
	}
	return nil
}

func (m *ThreadInfoArm) GetFpstate() *UserArmVfpstateEntry {
	if m != nil {
		return m.Fpstate
	}
	return nil
}

func init() {
	proto.RegisterType((*UserArmRegsEntry)(nil), "user_arm_regs_entry")
	proto.RegisterType((*UserArmVfpstateEntry)(nil), "user_arm_vfpstate_entry")
	proto.RegisterType((*ThreadInfoArm)(nil), "thread_info_arm")
}

func init() {
	proto.RegisterFile("core-arm.proto", fileDescriptor_614680b29747d7f9)
}

var fileDescriptor_614680b29747d7f9 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0xd2, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x07, 0x70, 0x35, 0xfd, 0x48, 0x71, 0x77, 0xb3, 0xc5, 0xac, 0xd8, 0x81, 0x13, 0xea, 0x69,
	0x25, 0x44, 0x69, 0xd3, 0xfd, 0x3c, 0x21, 0xf6, 0x11, 0x22, 0x4e, 0x5c, 0xa2, 0x90, 0x38, 0xc1,
	0x52, 0x48, 0xac, 0xb1, 0x41, 0xf0, 0x1a, 0xbc, 0x0d, 0x77, 0x9e, 0x80, 0x27, 0xc2, 0x1e, 0x4f,
	0x39, 0xb1, 0xb7, 0xf9, 0x8d, 0x47, 0xd5, 0xf4, 0x9f, 0x11, 0x59, 0x3d, 0xa2, 0x7a, 0x53, 0xe1,
	0x97, 0xad, 0xc1, 0xd1, 0x8d, 0x2f, 0xc5, 0x68, 0x9c, 0x8d, 0xf5, 0xe6, 0x77, 0x22, 0x9e, 0x7d,
	0xb5, 0x0a, 0x4b, 0xff, 0x5c, 0xa2, 0xea, 0x6c, 0xa9, 0x06, 0x87, 0x3f, 0x64, 0x26, 0x12, 0xdc,
	0xc1, 0xe4, 0x55, 0x72, 0x79, 0x5a, 0xf8, 0x8a, 0xbc, 0x87, 0x84, 0xbd, 0x27, 0xe7, 0x30, 0x65,
	0xe7, 0xe4, 0x03, 0xcc, 0xd8, 0x07, 0xf2, 0x15, 0xcc, 0xd9, 0x57, 0xe4, 0x6b, 0x58, 0xb0, 0xaf,
	0xc9, 0x37, 0x90, 0xb2, 0x6f, 0xc8, 0xb7, 0xb0, 0x64, 0xdf, 0x92, 0xef, 0xe0, 0x09, 0xfb, 0x8e,
	0x7c, 0x0f, 0x82, 0x7d, 0x2f, 0xd7, 0x62, 0x8a, 0xfb, 0x1d, 0xac, 0xa8, 0x11, 0xca, 0x30, 0xd1,
	0x1a, 0x38, 0x89, 0x13, 0xad, 0x09, 0xd6, 0x06, 0x4e, 0xa3, 0x35, 0xd9, 0x1a, 0xc8, 0xa2, 0x2d,
	0xb9, 0x47, 0x38, 0x8b, 0xee, 0x31, 0xd8, 0xd4, 0xb0, 0x8e, 0x36, 0xb5, 0x94, 0x62, 0x56, 0x1b,
	0x8b, 0xf0, 0x94, 0x3a, 0x54, 0xcb, 0x0b, 0x91, 0x8e, 0xa8, 0xbb, 0xd2, 0x47, 0x23, 0xa9, 0xbd,
	0x08, 0x2c, 0x76, 0x9b, 0x9f, 0x13, 0x71, 0xf1, 0x2f, 0xc6, 0x6f, 0xad, 0xb1, 0xae, 0x72, 0x8a,
	0xa3, 0x7c, 0x21, 0x96, 0xbe, 0x43, 0xe1, 0xfa, 0x40, 0xa7, 0x97, 0xb3, 0x22, 0xf5, 0x2e, 0x3c,
	0xe5, 0xb9, 0x98, 0xfb, 0xd9, 0x1a, 0x39, 0xd8, 0x88, 0xd8, 0x55, 0xdf, 0x6b, 0x8e, 0x37, 0x42,
	0x3e, 0x17, 0x8b, 0xd6, 0xe8, 0xc1, 0x3a, 0x4e, 0x99, 0x25, 0x41, 0xa4, 0xb1, 0xca, 0x39, 0xee,
	0x23, 0x37, 0xbf, 0x26, 0xe2, 0xcc, 0x7d, 0x46, 0x55, 0x35, 0xa5, 0x1e, 0xda, 0x31, 0xec, 0x26,
	0x5f, 0xfb, 0x6b, 0xe8, 0x55, 0x85, 0xa5, 0xd3, 0x4d, 0x59, 0x35, 0x0d, 0xd2, 0x37, 0x9e, 0x3d,
	0xcc, 0xff, 0xbc, 0x4b, 0x96, 0x93, 0xe2, 0x84, 0x1e, 0x3f, 0xe8, 0xe6, 0xbd, 0x7f, 0x0a, 0x21,
	0xbb, 0xde, 0xf2, 0x72, 0xa1, 0x94, 0x07, 0xb1, 0xe8, 0x0c, 0xfd, 0x93, 0xb0, 0xdb, 0x2a, 0x3f,
	0xdf, 0xfe, 0xe7, 0x78, 0x8e, 0x3f, 0xc6, 0xa3, 0x32, 0x0f, 0x1b, 0x52, 0x22, 0xb4, 0xfa, 0x2a,
	0x87, 0xed, 0x23, 0x59, 0x15, 0xc7, 0xc1, 0x87, 0xf5, 0xc7, 0xec, 0x2d, 0x5d, 0xe8, 0x27, 0x3d,
	0x34, 0x7a, 0xe8, 0xec, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x69, 0xea, 0x7a, 0xc6, 0x02,
	0x00, 0x00,
}
