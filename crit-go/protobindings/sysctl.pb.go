// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sysctl.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SysctlType int32

const (
	SysctlType_CTL_STR SysctlType = 5
	SysctlType_CTL_32  SysctlType = 6
)

var SysctlType_name = map[int32]string{
	5: "CTL_STR",
	6: "CTL_32",
}

var SysctlType_value = map[string]int32{
	"CTL_STR": 5,
	"CTL_32":  6,
}

func (x SysctlType) Enum() *SysctlType {
	p := new(SysctlType)
	*p = x
	return p
}

func (x SysctlType) String() string {
	return proto.EnumName(SysctlType_name, int32(x))
}

func (x *SysctlType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SysctlType_value, data, "SysctlType")
	if err != nil {
		return err
	}
	*x = SysctlType(value)
	return nil
}

func (SysctlType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e5255964d6434023, []int{0}
}

type SysctlEntry struct {
	Type                 *SysctlType `protobuf:"varint,1,req,name=type,enum=SysctlType" json:"type,omitempty"`
	Iarg                 *int32      `protobuf:"varint,2,opt,name=iarg" json:"iarg,omitempty"`
	Sarg                 *string     `protobuf:"bytes,3,opt,name=sarg" json:"sarg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SysctlEntry) Reset()         { *m = SysctlEntry{} }
func (m *SysctlEntry) String() string { return proto.CompactTextString(m) }
func (*SysctlEntry) ProtoMessage()    {}
func (*SysctlEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5255964d6434023, []int{0}
}

func (m *SysctlEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysctlEntry.Unmarshal(m, b)
}
func (m *SysctlEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysctlEntry.Marshal(b, m, deterministic)
}
func (m *SysctlEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysctlEntry.Merge(m, src)
}
func (m *SysctlEntry) XXX_Size() int {
	return xxx_messageInfo_SysctlEntry.Size(m)
}
func (m *SysctlEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SysctlEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SysctlEntry proto.InternalMessageInfo

func (m *SysctlEntry) GetType() SysctlType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SysctlType_CTL_STR
}

func (m *SysctlEntry) GetIarg() int32 {
	if m != nil && m.Iarg != nil {
		return *m.Iarg
	}
	return 0
}

func (m *SysctlEntry) GetSarg() string {
	if m != nil && m.Sarg != nil {
		return *m.Sarg
	}
	return ""
}

func init() {
	proto.RegisterEnum("SysctlType", SysctlType_name, SysctlType_value)
	proto.RegisterType((*SysctlEntry)(nil), "sysctl_entry")
}

func init() {
	proto.RegisterFile("sysctl.proto", fileDescriptor_e5255964d6434023)
}

var fileDescriptor_e5255964d6434023 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xae, 0x2c, 0x4e,
	0x2e, 0xc9, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0x87, 0xf1, 0xe3, 0x53, 0xf3, 0x4a,
	0x8a, 0x2a, 0x85, 0xe4, 0xb9, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x18, 0x15, 0x98, 0x34, 0xf8,
	0x8c, 0xb8, 0xf5, 0x82, 0xc1, 0x92, 0x21, 0x40, 0xa1, 0x20, 0xb0, 0x84, 0x90, 0x10, 0x17, 0x4b,
	0x66, 0x62, 0x51, 0xba, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x98, 0x0d, 0x12, 0x2b, 0x06,
	0x89, 0x31, 0x03, 0xc5, 0x38, 0x83, 0xc0, 0x6c, 0x2d, 0x55, 0x2e, 0x2e, 0x84, 0x5e, 0x21, 0x6e,
	0x2e, 0x76, 0xe7, 0x10, 0x9f, 0xf8, 0xe0, 0x90, 0x20, 0x01, 0x56, 0x21, 0x2e, 0x2e, 0x36, 0x10,
	0xc7, 0xd8, 0x48, 0x80, 0xcd, 0x49, 0x20, 0x8a, 0x4f, 0x1f, 0xec, 0x92, 0xa4, 0xcc, 0xbc, 0x94,
	0xcc, 0xbc, 0xf4, 0x62, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xb9, 0x23, 0x10, 0xa0, 0x00,
	0x00, 0x00,
}
