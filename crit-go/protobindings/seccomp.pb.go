// Code generated by protoc-gen-go. DO NOT EDIT.
// source: seccomp.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SeccompFilter struct {
	Filter               []byte   `protobuf:"bytes,1,req,name=filter" json:"filter,omitempty"`
	Prev                 *uint32  `protobuf:"varint,2,opt,name=prev" json:"prev,omitempty"`
	Flags                *uint32  `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeccompFilter) Reset()         { *m = SeccompFilter{} }
func (m *SeccompFilter) String() string { return proto.CompactTextString(m) }
func (*SeccompFilter) ProtoMessage()    {}
func (*SeccompFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_65f7515795a9d3bb, []int{0}
}

func (m *SeccompFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeccompFilter.Unmarshal(m, b)
}
func (m *SeccompFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeccompFilter.Marshal(b, m, deterministic)
}
func (m *SeccompFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeccompFilter.Merge(m, src)
}
func (m *SeccompFilter) XXX_Size() int {
	return xxx_messageInfo_SeccompFilter.Size(m)
}
func (m *SeccompFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_SeccompFilter.DiscardUnknown(m)
}

var xxx_messageInfo_SeccompFilter proto.InternalMessageInfo

func (m *SeccompFilter) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *SeccompFilter) GetPrev() uint32 {
	if m != nil && m.Prev != nil {
		return *m.Prev
	}
	return 0
}

func (m *SeccompFilter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

type SeccompEntry struct {
	SeccompFilters       []*SeccompFilter `protobuf:"bytes,1,rep,name=seccomp_filters,json=seccompFilters" json:"seccomp_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SeccompEntry) Reset()         { *m = SeccompEntry{} }
func (m *SeccompEntry) String() string { return proto.CompactTextString(m) }
func (*SeccompEntry) ProtoMessage()    {}
func (*SeccompEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_65f7515795a9d3bb, []int{1}
}

func (m *SeccompEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeccompEntry.Unmarshal(m, b)
}
func (m *SeccompEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeccompEntry.Marshal(b, m, deterministic)
}
func (m *SeccompEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeccompEntry.Merge(m, src)
}
func (m *SeccompEntry) XXX_Size() int {
	return xxx_messageInfo_SeccompEntry.Size(m)
}
func (m *SeccompEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SeccompEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SeccompEntry proto.InternalMessageInfo

func (m *SeccompEntry) GetSeccompFilters() []*SeccompFilter {
	if m != nil {
		return m.SeccompFilters
	}
	return nil
}

func init() {
	proto.RegisterType((*SeccompFilter)(nil), "seccomp_filter")
	proto.RegisterType((*SeccompEntry)(nil), "seccomp_entry")
}

func init() {
	proto.RegisterFile("seccomp.proto", fileDescriptor_65f7515795a9d3bb)
}

var fileDescriptor_65f7515795a9d3bb = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x4d, 0x4e,
	0xce, 0xcf, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0xe2, 0xe2, 0x83, 0x0a, 0xc4,
	0xa7, 0x65, 0xe6, 0x94, 0xa4, 0x16, 0x09, 0x89, 0x71, 0xb1, 0x41, 0x58, 0x12, 0x8c, 0x0a, 0x4c,
	0x1a, 0x3c, 0x41, 0x50, 0x9e, 0x90, 0x10, 0x17, 0x4b, 0x41, 0x51, 0x6a, 0x99, 0x04, 0x93, 0x02,
	0xa3, 0x06, 0x6f, 0x10, 0x98, 0x2d, 0x24, 0xc2, 0xc5, 0x9a, 0x96, 0x93, 0x98, 0x5e, 0x2c, 0xc1,
	0x0c, 0x16, 0x84, 0x70, 0x94, 0x3c, 0xe1, 0x96, 0xc4, 0xa7, 0xe6, 0x95, 0x14, 0x55, 0x0a, 0x59,
	0x70, 0xf1, 0xa3, 0x5a, 0x52, 0x0c, 0x34, 0x9b, 0x59, 0x83, 0xdb, 0x88, 0x5f, 0x0f, 0x55, 0x3c,
	0x08, 0xe6, 0x18, 0x37, 0x88, 0x32, 0x27, 0x81, 0x28, 0x3e, 0x7d, 0xb0, 0x43, 0x93, 0x32, 0xf3,
	0x52, 0x32, 0xf3, 0xd2, 0x8b, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xd0, 0xa5, 0x97, 0xc0,
	0x00, 0x00, 0x00,
}
