// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sk-unix.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilePermsEntry struct {
	Mode                 *uint32  `protobuf:"varint,1,req,name=mode" json:"mode,omitempty"`
	Uid                  *uint32  `protobuf:"varint,2,req,name=uid" json:"uid,omitempty"`
	Gid                  *uint32  `protobuf:"varint,3,req,name=gid" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilePermsEntry) Reset()         { *m = FilePermsEntry{} }
func (m *FilePermsEntry) String() string { return proto.CompactTextString(m) }
func (*FilePermsEntry) ProtoMessage()    {}
func (*FilePermsEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_38300c18f5c17703, []int{0}
}

func (m *FilePermsEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilePermsEntry.Unmarshal(m, b)
}
func (m *FilePermsEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilePermsEntry.Marshal(b, m, deterministic)
}
func (m *FilePermsEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilePermsEntry.Merge(m, src)
}
func (m *FilePermsEntry) XXX_Size() int {
	return xxx_messageInfo_FilePermsEntry.Size(m)
}
func (m *FilePermsEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FilePermsEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FilePermsEntry proto.InternalMessageInfo

func (m *FilePermsEntry) GetMode() uint32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

func (m *FilePermsEntry) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *FilePermsEntry) GetGid() uint32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

type UnixSkEntry struct {
	//
	// Few words about why we need both -- id and ino.
	//
	// The former one is used to link file descriptor from
	// fdinfo image with the unix_sk_entry that should be
	// opened under it.
	//
	// The latter one ties together unix peers -- the peer
	// member on this structure is the ino one of its peer
	// and simetimes vise-versa.
	Id      *uint32      `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Ino     *uint32      `protobuf:"varint,2,req,name=ino" json:"ino,omitempty"`
	Type    *uint32      `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	State   *uint32      `protobuf:"varint,4,req,name=state" json:"state,omitempty"`
	Flags   *uint32      `protobuf:"varint,5,req,name=flags" json:"flags,omitempty"`
	Uflags  *uint32      `protobuf:"varint,6,req,name=uflags" json:"uflags,omitempty"`
	Backlog *uint32      `protobuf:"varint,7,req,name=backlog" json:"backlog,omitempty"`
	Peer    *uint32      `protobuf:"varint,8,req,name=peer" json:"peer,omitempty"`
	Fown    *FownEntry   `protobuf:"bytes,9,req,name=fown" json:"fown,omitempty"`
	Opts    *SkOptsEntry `protobuf:"bytes,10,req,name=opts" json:"opts,omitempty"`
	//
	// Abstract name may contain \0 at any point,
	// so we need to carry it as byte sequence...
	Name      []byte          `protobuf:"bytes,11,req,name=name" json:"name,omitempty"`
	Shutdown  *SkShutdown     `protobuf:"varint,12,opt,name=shutdown,enum=SkShutdown" json:"shutdown,omitempty"`
	FilePerms *FilePermsEntry `protobuf:"bytes,13,opt,name=file_perms,json=filePerms" json:"file_perms,omitempty"`
	//
	// Relative socket name may have prefix.
	NameDir              *string  `protobuf:"bytes,14,opt,name=name_dir,json=nameDir" json:"name_dir,omitempty"`
	Deleted              *bool    `protobuf:"varint,15,opt,name=deleted" json:"deleted,omitempty"`
	NsId                 *uint32  `protobuf:"varint,16,opt,name=ns_id,json=nsId" json:"ns_id,omitempty"`
	MntId                *int32   `protobuf:"zigzag32,17,opt,name=mnt_id,json=mntId,def=-1" json:"mnt_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnixSkEntry) Reset()         { *m = UnixSkEntry{} }
func (m *UnixSkEntry) String() string { return proto.CompactTextString(m) }
func (*UnixSkEntry) ProtoMessage()    {}
func (*UnixSkEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_38300c18f5c17703, []int{1}
}

func (m *UnixSkEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnixSkEntry.Unmarshal(m, b)
}
func (m *UnixSkEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnixSkEntry.Marshal(b, m, deterministic)
}
func (m *UnixSkEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnixSkEntry.Merge(m, src)
}
func (m *UnixSkEntry) XXX_Size() int {
	return xxx_messageInfo_UnixSkEntry.Size(m)
}
func (m *UnixSkEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_UnixSkEntry.DiscardUnknown(m)
}

var xxx_messageInfo_UnixSkEntry proto.InternalMessageInfo

const Default_UnixSkEntry_MntId int32 = -1

func (m *UnixSkEntry) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnixSkEntry) GetIno() uint32 {
	if m != nil && m.Ino != nil {
		return *m.Ino
	}
	return 0
}

func (m *UnixSkEntry) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *UnixSkEntry) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *UnixSkEntry) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *UnixSkEntry) GetUflags() uint32 {
	if m != nil && m.Uflags != nil {
		return *m.Uflags
	}
	return 0
}

func (m *UnixSkEntry) GetBacklog() uint32 {
	if m != nil && m.Backlog != nil {
		return *m.Backlog
	}
	return 0
}

func (m *UnixSkEntry) GetPeer() uint32 {
	if m != nil && m.Peer != nil {
		return *m.Peer
	}
	return 0
}

func (m *UnixSkEntry) GetFown() *FownEntry {
	if m != nil {
		return m.Fown
	}
	return nil
}

func (m *UnixSkEntry) GetOpts() *SkOptsEntry {
	if m != nil {
		return m.Opts
	}
	return nil
}

func (m *UnixSkEntry) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UnixSkEntry) GetShutdown() SkShutdown {
	if m != nil && m.Shutdown != nil {
		return *m.Shutdown
	}
	return SkShutdown_NONE
}

func (m *UnixSkEntry) GetFilePerms() *FilePermsEntry {
	if m != nil {
		return m.FilePerms
	}
	return nil
}

func (m *UnixSkEntry) GetNameDir() string {
	if m != nil && m.NameDir != nil {
		return *m.NameDir
	}
	return ""
}

func (m *UnixSkEntry) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return false
}

func (m *UnixSkEntry) GetNsId() uint32 {
	if m != nil && m.NsId != nil {
		return *m.NsId
	}
	return 0
}

func (m *UnixSkEntry) GetMntId() int32 {
	if m != nil && m.MntId != nil {
		return *m.MntId
	}
	return Default_UnixSkEntry_MntId
}

func init() {
	proto.RegisterType((*FilePermsEntry)(nil), "file_perms_entry")
	proto.RegisterType((*UnixSkEntry)(nil), "unix_sk_entry")
}

func init() {
	proto.RegisterFile("sk-unix.proto", fileDescriptor_38300c18f5c17703)
}

var fileDescriptor_38300c18f5c17703 = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x92, 0x41, 0x8f, 0xd3, 0x30,
	0x10, 0x85, 0xd5, 0x6c, 0xd2, 0xa6, 0x93, 0x36, 0xb4, 0xe6, 0x62, 0x40, 0x88, 0x55, 0x4f, 0xbd,
	0x6c, 0x81, 0x1e, 0xf7, 0x52, 0xa9, 0xe2, 0xb2, 0x9c, 0x90, 0x8f, 0x5c, 0xa2, 0x2e, 0x76, 0x83,
	0x95, 0xc4, 0x89, 0x62, 0x47, 0xb0, 0x47, 0xfe, 0x62, 0x7f, 0x11, 0x33, 0x76, 0xc3, 0x02, 0xb7,
	0x37, 0xdf, 0x7b, 0x9e, 0xd8, 0x33, 0x81, 0xa5, 0xad, 0xee, 0x06, 0xa3, 0x7f, 0xee, 0xba, 0xbe,
	0x75, 0xed, 0x6b, 0x68, 0x3b, 0x67, 0x47, 0x7d, 0x6e, 0x7f, 0x98, 0xab, 0xa6, 0xd8, 0xb3, 0xb5,
	0xf9, 0x0c, 0xab, 0xb3, 0xae, 0x55, 0xd1, 0xa9, 0xbe, 0xb1, 0x85, 0x32, 0xae, 0x7f, 0x62, 0x0c,
	0xe2, 0xa6, 0x95, 0x8a, 0x4f, 0x6e, 0xa3, 0xed, 0x52, 0x78, 0xcd, 0x56, 0x70, 0x33, 0x68, 0xc9,
	0x23, 0x8f, 0x48, 0x12, 0x29, 0x91, 0xdc, 0x04, 0x82, 0x72, 0xf3, 0x2b, 0x86, 0x25, 0xdd, 0xa0,
	0xb0, 0xd5, 0xb5, 0x53, 0x0e, 0x11, 0x46, 0x42, 0x9f, 0x28, 0x9c, 0xd1, 0xa6, 0x1d, 0xbb, 0xa0,
	0x64, 0x6f, 0x20, 0x76, 0x4f, 0x9d, 0x0a, 0x6d, 0x8e, 0xb3, 0xcb, 0x21, 0xde, 0x47, 0xb6, 0x12,
	0x1e, 0xb2, 0xb7, 0x90, 0x58, 0x77, 0x72, 0x8a, 0xc7, 0xff, 0xba, 0x81, 0xe2, 0xd9, 0xe4, 0x5c,
	0x9f, 0x4a, 0xcb, 0x13, 0x6f, 0x27, 0x97, 0x43, 0x94, 0x4e, 0x44, 0x60, 0x78, 0x76, 0x3a, 0x04,
	0x77, 0xfa, 0xb7, 0x7b, 0x85, 0x8c, 0xc3, 0xec, 0xf1, 0xf4, 0xad, 0xaa, 0xdb, 0x92, 0xcf, 0xfc,
	0x6d, 0xc6, 0x92, 0x5e, 0xdf, 0x29, 0xd5, 0xf3, 0x34, 0xbc, 0x9e, 0x34, 0x7b, 0x07, 0x31, 0x8d,
	0x90, 0xcf, 0x91, 0x65, 0xfb, 0x6c, 0x47, 0x45, 0x78, 0xa2, 0xf0, 0x06, 0xdb, 0x40, 0x4c, 0x43,
	0xe5, 0xe0, 0x03, 0xf9, 0x0e, 0x27, 0x40, 0xf5, 0x98, 0x21, 0x4d, 0x19, 0x73, 0x6a, 0x14, 0xcf,
	0x30, 0xb3, 0x38, 0xe6, 0x97, 0x43, 0x76, 0x3f, 0xf7, 0xe3, 0x22, 0x2a, 0xbc, 0xc7, 0xb6, 0x90,
	0xda, 0xef, 0x83, 0x93, 0xf4, 0xb1, 0xc5, 0xed, 0x64, 0x9b, 0xef, 0x17, 0xd4, 0x6b, 0x64, 0xe2,
	0x8f, 0xcb, 0x3e, 0x00, 0x3c, 0x2f, 0x8e, 0x2f, 0x31, 0x9b, 0xed, 0xd7, 0xbb, 0xff, 0x77, 0x29,
	0xe6, 0x44, 0xbe, 0x10, 0x60, 0xaf, 0x20, 0xa5, 0x6f, 0x14, 0x52, 0xf7, 0x3c, 0xc7, 0xfc, 0x5c,
	0xcc, 0xa8, 0xfe, 0xa4, 0x7b, 0x9a, 0x86, 0x54, 0xb5, 0x72, 0x4a, 0xf2, 0x17, 0xe8, 0xa4, 0x62,
	0x2c, 0xd9, 0x4b, 0x48, 0x8c, 0x2d, 0x70, 0x89, 0x2b, 0xe4, 0x38, 0x0e, 0x63, 0x1f, 0x24, 0x76,
	0x9a, 0x36, 0xc6, 0x11, 0x5d, 0x23, 0x5d, 0xdf, 0x47, 0x77, 0x1f, 0x45, 0x82, 0xe4, 0x41, 0x1e,
	0x57, 0x5f, 0xf3, 0xf7, 0xfe, 0xcf, 0x7a, 0xd4, 0x46, 0x6a, 0x53, 0xda, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xda, 0xf8, 0x98, 0x5f, 0x98, 0x02, 0x00, 0x00,
}
