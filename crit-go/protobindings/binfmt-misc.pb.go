// Code generated by protoc-gen-go. DO NOT EDIT.
// source: binfmt-misc.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BinfmtMiscEntry struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Enabled              *bool    `protobuf:"varint,2,req,name=enabled" json:"enabled,omitempty"`
	Interpreter          *string  `protobuf:"bytes,3,req,name=interpreter" json:"interpreter,omitempty"`
	Flags                *string  `protobuf:"bytes,4,opt,name=flags" json:"flags,omitempty"`
	Extension            *string  `protobuf:"bytes,5,opt,name=extension" json:"extension,omitempty"`
	Magic                *string  `protobuf:"bytes,6,opt,name=magic" json:"magic,omitempty"`
	Mask                 *string  `protobuf:"bytes,7,opt,name=mask" json:"mask,omitempty"`
	Offset               *int32   `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinfmtMiscEntry) Reset()         { *m = BinfmtMiscEntry{} }
func (m *BinfmtMiscEntry) String() string { return proto.CompactTextString(m) }
func (*BinfmtMiscEntry) ProtoMessage()    {}
func (*BinfmtMiscEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4bff2e066a6312b, []int{0}
}

func (m *BinfmtMiscEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinfmtMiscEntry.Unmarshal(m, b)
}
func (m *BinfmtMiscEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinfmtMiscEntry.Marshal(b, m, deterministic)
}
func (m *BinfmtMiscEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinfmtMiscEntry.Merge(m, src)
}
func (m *BinfmtMiscEntry) XXX_Size() int {
	return xxx_messageInfo_BinfmtMiscEntry.Size(m)
}
func (m *BinfmtMiscEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_BinfmtMiscEntry.DiscardUnknown(m)
}

var xxx_messageInfo_BinfmtMiscEntry proto.InternalMessageInfo

func (m *BinfmtMiscEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BinfmtMiscEntry) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *BinfmtMiscEntry) GetInterpreter() string {
	if m != nil && m.Interpreter != nil {
		return *m.Interpreter
	}
	return ""
}

func (m *BinfmtMiscEntry) GetFlags() string {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return ""
}

func (m *BinfmtMiscEntry) GetExtension() string {
	if m != nil && m.Extension != nil {
		return *m.Extension
	}
	return ""
}

func (m *BinfmtMiscEntry) GetMagic() string {
	if m != nil && m.Magic != nil {
		return *m.Magic
	}
	return ""
}

func (m *BinfmtMiscEntry) GetMask() string {
	if m != nil && m.Mask != nil {
		return *m.Mask
	}
	return ""
}

func (m *BinfmtMiscEntry) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func init() {
	proto.RegisterType((*BinfmtMiscEntry)(nil), "binfmt_misc_entry")
}

func init() {
	proto.RegisterFile("binfmt-misc.proto", fileDescriptor_c4bff2e066a6312b)
}

var fileDescriptor_c4bff2e066a6312b = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8f, 0xbd, 0x6a, 0xc3, 0x30,
	0x14, 0x85, 0xb1, 0xeb, 0x5f, 0x15, 0x4a, 0x2b, 0x4a, 0xb9, 0x43, 0x07, 0xd3, 0xa9, 0x4b, 0xdb,
	0x77, 0xe8, 0x23, 0x78, 0xcc, 0x62, 0x64, 0xfb, 0xca, 0x88, 0x58, 0x57, 0x46, 0xd2, 0x90, 0x3c,
	0x6a, 0xde, 0x26, 0xb2, 0x1c, 0x93, 0x2c, 0xe2, 0x7e, 0xdf, 0xe1, 0x80, 0x0e, 0x7b, 0xeb, 0x15,
	0x49, 0xed, 0x7f, 0xb4, 0x72, 0xc3, 0xef, 0x62, 0x8d, 0x37, 0x5f, 0x97, 0x64, 0xb7, 0xdd, 0x6a,
	0x3b, 0x24, 0x6f, 0xcf, 0x9c, 0xb3, 0x8c, 0x84, 0x46, 0x48, 0x9a, 0xf4, 0xbb, 0x6e, 0xe3, 0xcd,
	0x81, 0x95, 0x48, 0xa2, 0x9f, 0x71, 0x84, 0x34, 0xe8, 0xaa, 0xdd, 0x91, 0x37, 0xec, 0x59, 0x91,
	0x47, 0xbb, 0x58, 0x0c, 0x2f, 0x3c, 0xc5, 0xd2, 0xa3, 0xe2, 0xef, 0x2c, 0x97, 0xb3, 0x98, 0x1c,
	0x64, 0x4d, 0x12, 0xb2, 0x0d, 0xf8, 0x27, 0xab, 0xf1, 0xe4, 0x91, 0x9c, 0x32, 0x04, 0x79, 0x4c,
	0xee, 0x62, 0xed, 0x68, 0x31, 0xa9, 0x01, 0x8a, 0xad, 0x13, 0x61, 0xfd, 0x99, 0x16, 0xee, 0x08,
	0x65, 0x94, 0xf1, 0xe6, 0x1f, 0xac, 0x30, 0x52, 0x3a, 0xf4, 0x50, 0x05, 0x9b, 0xb7, 0x37, 0xfa,
	0x7f, 0x3d, 0xbc, 0xfc, 0xc5, 0x95, 0x61, 0xe0, 0xa8, 0x68, 0x72, 0xd7, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0x3b, 0x46, 0xdf, 0x01, 0x01, 0x00, 0x00,
}
