// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tty.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TtyType int32

const (
	TtyType_UNKNOWN TtyType = 0
	TtyType_PTY     TtyType = 1
	TtyType_CONSOLE TtyType = 2
	TtyType_VT      TtyType = 3
	TtyType_CTTY    TtyType = 4
	TtyType_EXT_TTY TtyType = 5
	TtyType_SERIAL  TtyType = 6
)

var TtyType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PTY",
	2: "CONSOLE",
	3: "VT",
	4: "CTTY",
	5: "EXT_TTY",
	6: "SERIAL",
}

var TtyType_value = map[string]int32{
	"UNKNOWN": 0,
	"PTY":     1,
	"CONSOLE": 2,
	"VT":      3,
	"CTTY":    4,
	"EXT_TTY": 5,
	"SERIAL":  6,
}

func (x TtyType) Enum() *TtyType {
	p := new(TtyType)
	*p = x
	return p
}

func (x TtyType) String() string {
	return proto.EnumName(TtyType_name, int32(x))
}

func (x *TtyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TtyType_value, data, "TtyType")
	if err != nil {
		return err
	}
	*x = TtyType(value)
	return nil
}

func (TtyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{0}
}

type WinsizeEntry struct {
	WsRow                *uint32  `protobuf:"varint,1,req,name=ws_row,json=wsRow" json:"ws_row,omitempty"`
	WsCol                *uint32  `protobuf:"varint,2,req,name=ws_col,json=wsCol" json:"ws_col,omitempty"`
	WsXpixel             *uint32  `protobuf:"varint,3,req,name=ws_xpixel,json=wsXpixel" json:"ws_xpixel,omitempty"`
	WsYpixel             *uint32  `protobuf:"varint,4,req,name=ws_ypixel,json=wsYpixel" json:"ws_ypixel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WinsizeEntry) Reset()         { *m = WinsizeEntry{} }
func (m *WinsizeEntry) String() string { return proto.CompactTextString(m) }
func (*WinsizeEntry) ProtoMessage()    {}
func (*WinsizeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{0}
}

func (m *WinsizeEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinsizeEntry.Unmarshal(m, b)
}
func (m *WinsizeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinsizeEntry.Marshal(b, m, deterministic)
}
func (m *WinsizeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinsizeEntry.Merge(m, src)
}
func (m *WinsizeEntry) XXX_Size() int {
	return xxx_messageInfo_WinsizeEntry.Size(m)
}
func (m *WinsizeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_WinsizeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_WinsizeEntry proto.InternalMessageInfo

func (m *WinsizeEntry) GetWsRow() uint32 {
	if m != nil && m.WsRow != nil {
		return *m.WsRow
	}
	return 0
}

func (m *WinsizeEntry) GetWsCol() uint32 {
	if m != nil && m.WsCol != nil {
		return *m.WsCol
	}
	return 0
}

func (m *WinsizeEntry) GetWsXpixel() uint32 {
	if m != nil && m.WsXpixel != nil {
		return *m.WsXpixel
	}
	return 0
}

func (m *WinsizeEntry) GetWsYpixel() uint32 {
	if m != nil && m.WsYpixel != nil {
		return *m.WsYpixel
	}
	return 0
}

type TermiosEntry struct {
	CIflag               *uint32  `protobuf:"varint,1,req,name=c_iflag,json=cIflag" json:"c_iflag,omitempty"`
	COflag               *uint32  `protobuf:"varint,2,req,name=c_oflag,json=cOflag" json:"c_oflag,omitempty"`
	CCflag               *uint32  `protobuf:"varint,3,req,name=c_cflag,json=cCflag" json:"c_cflag,omitempty"`
	CLflag               *uint32  `protobuf:"varint,4,req,name=c_lflag,json=cLflag" json:"c_lflag,omitempty"`
	CLine                *uint32  `protobuf:"varint,5,req,name=c_line,json=cLine" json:"c_line,omitempty"`
	CIspeed              *uint32  `protobuf:"varint,6,req,name=c_ispeed,json=cIspeed" json:"c_ispeed,omitempty"`
	COspeed              *uint32  `protobuf:"varint,7,req,name=c_ospeed,json=cOspeed" json:"c_ospeed,omitempty"`
	CCc                  []uint32 `protobuf:"varint,8,rep,name=c_cc,json=cCc" json:"c_cc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TermiosEntry) Reset()         { *m = TermiosEntry{} }
func (m *TermiosEntry) String() string { return proto.CompactTextString(m) }
func (*TermiosEntry) ProtoMessage()    {}
func (*TermiosEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{1}
}

func (m *TermiosEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TermiosEntry.Unmarshal(m, b)
}
func (m *TermiosEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TermiosEntry.Marshal(b, m, deterministic)
}
func (m *TermiosEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TermiosEntry.Merge(m, src)
}
func (m *TermiosEntry) XXX_Size() int {
	return xxx_messageInfo_TermiosEntry.Size(m)
}
func (m *TermiosEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TermiosEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TermiosEntry proto.InternalMessageInfo

func (m *TermiosEntry) GetCIflag() uint32 {
	if m != nil && m.CIflag != nil {
		return *m.CIflag
	}
	return 0
}

func (m *TermiosEntry) GetCOflag() uint32 {
	if m != nil && m.COflag != nil {
		return *m.COflag
	}
	return 0
}

func (m *TermiosEntry) GetCCflag() uint32 {
	if m != nil && m.CCflag != nil {
		return *m.CCflag
	}
	return 0
}

func (m *TermiosEntry) GetCLflag() uint32 {
	if m != nil && m.CLflag != nil {
		return *m.CLflag
	}
	return 0
}

func (m *TermiosEntry) GetCLine() uint32 {
	if m != nil && m.CLine != nil {
		return *m.CLine
	}
	return 0
}

func (m *TermiosEntry) GetCIspeed() uint32 {
	if m != nil && m.CIspeed != nil {
		return *m.CIspeed
	}
	return 0
}

func (m *TermiosEntry) GetCOspeed() uint32 {
	if m != nil && m.COspeed != nil {
		return *m.COspeed
	}
	return 0
}

func (m *TermiosEntry) GetCCc() []uint32 {
	if m != nil {
		return m.CCc
	}
	return nil
}

type TtyPtyEntry struct {
	Index                *uint32  `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TtyPtyEntry) Reset()         { *m = TtyPtyEntry{} }
func (m *TtyPtyEntry) String() string { return proto.CompactTextString(m) }
func (*TtyPtyEntry) ProtoMessage()    {}
func (*TtyPtyEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{2}
}

func (m *TtyPtyEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TtyPtyEntry.Unmarshal(m, b)
}
func (m *TtyPtyEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TtyPtyEntry.Marshal(b, m, deterministic)
}
func (m *TtyPtyEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TtyPtyEntry.Merge(m, src)
}
func (m *TtyPtyEntry) XXX_Size() int {
	return xxx_messageInfo_TtyPtyEntry.Size(m)
}
func (m *TtyPtyEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TtyPtyEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TtyPtyEntry proto.InternalMessageInfo

func (m *TtyPtyEntry) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type TtyDataEntry struct {
	TtyId                *uint32  `protobuf:"varint,1,req,name=tty_id,json=ttyId" json:"tty_id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TtyDataEntry) Reset()         { *m = TtyDataEntry{} }
func (m *TtyDataEntry) String() string { return proto.CompactTextString(m) }
func (*TtyDataEntry) ProtoMessage()    {}
func (*TtyDataEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{3}
}

func (m *TtyDataEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TtyDataEntry.Unmarshal(m, b)
}
func (m *TtyDataEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TtyDataEntry.Marshal(b, m, deterministic)
}
func (m *TtyDataEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TtyDataEntry.Merge(m, src)
}
func (m *TtyDataEntry) XXX_Size() int {
	return xxx_messageInfo_TtyDataEntry.Size(m)
}
func (m *TtyDataEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TtyDataEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TtyDataEntry proto.InternalMessageInfo

func (m *TtyDataEntry) GetTtyId() uint32 {
	if m != nil && m.TtyId != nil {
		return *m.TtyId
	}
	return 0
}

func (m *TtyDataEntry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TtyInfoEntry struct {
	Id         *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Type       *TtyType `protobuf:"varint,2,req,name=type,enum=TtyType" json:"type,omitempty"`
	Locked     *bool    `protobuf:"varint,3,req,name=locked" json:"locked,omitempty"`
	Exclusive  *bool    `protobuf:"varint,4,req,name=exclusive" json:"exclusive,omitempty"`
	PacketMode *bool    `protobuf:"varint,5,req,name=packet_mode,json=packetMode" json:"packet_mode,omitempty"`
	Sid        *uint32  `protobuf:"varint,6,req,name=sid" json:"sid,omitempty"`
	Pgrp       *uint32  `protobuf:"varint,7,req,name=pgrp" json:"pgrp,omitempty"`
	//
	// Convenient for printing errors and such, with this
	// device encoded we can figure out major and minor
	// numbers.
	Rdev          *uint32       `protobuf:"varint,8,req,name=rdev" json:"rdev,omitempty"`
	Termios       *TermiosEntry `protobuf:"bytes,9,opt,name=termios" json:"termios,omitempty"`
	TermiosLocked *TermiosEntry `protobuf:"bytes,10,opt,name=termios_locked,json=termiosLocked" json:"termios_locked,omitempty"`
	Winsize       *WinsizeEntry `protobuf:"bytes,11,opt,name=winsize" json:"winsize,omitempty"`
	//
	// These are optional fields which presence depends on
	// TTY type.
	Pty                  *TtyPtyEntry `protobuf:"bytes,12,opt,name=pty" json:"pty,omitempty"`
	Dev                  *uint32      `protobuf:"varint,13,opt,name=dev" json:"dev,omitempty"`
	Uid                  *uint32      `protobuf:"varint,14,opt,name=uid" json:"uid,omitempty"`
	Gid                  *uint32      `protobuf:"varint,15,opt,name=gid" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TtyInfoEntry) Reset()         { *m = TtyInfoEntry{} }
func (m *TtyInfoEntry) String() string { return proto.CompactTextString(m) }
func (*TtyInfoEntry) ProtoMessage()    {}
func (*TtyInfoEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{4}
}

func (m *TtyInfoEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TtyInfoEntry.Unmarshal(m, b)
}
func (m *TtyInfoEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TtyInfoEntry.Marshal(b, m, deterministic)
}
func (m *TtyInfoEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TtyInfoEntry.Merge(m, src)
}
func (m *TtyInfoEntry) XXX_Size() int {
	return xxx_messageInfo_TtyInfoEntry.Size(m)
}
func (m *TtyInfoEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TtyInfoEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TtyInfoEntry proto.InternalMessageInfo

func (m *TtyInfoEntry) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TtyInfoEntry) GetType() TtyType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TtyType_UNKNOWN
}

func (m *TtyInfoEntry) GetLocked() bool {
	if m != nil && m.Locked != nil {
		return *m.Locked
	}
	return false
}

func (m *TtyInfoEntry) GetExclusive() bool {
	if m != nil && m.Exclusive != nil {
		return *m.Exclusive
	}
	return false
}

func (m *TtyInfoEntry) GetPacketMode() bool {
	if m != nil && m.PacketMode != nil {
		return *m.PacketMode
	}
	return false
}

func (m *TtyInfoEntry) GetSid() uint32 {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return 0
}

func (m *TtyInfoEntry) GetPgrp() uint32 {
	if m != nil && m.Pgrp != nil {
		return *m.Pgrp
	}
	return 0
}

func (m *TtyInfoEntry) GetRdev() uint32 {
	if m != nil && m.Rdev != nil {
		return *m.Rdev
	}
	return 0
}

func (m *TtyInfoEntry) GetTermios() *TermiosEntry {
	if m != nil {
		return m.Termios
	}
	return nil
}

func (m *TtyInfoEntry) GetTermiosLocked() *TermiosEntry {
	if m != nil {
		return m.TermiosLocked
	}
	return nil
}

func (m *TtyInfoEntry) GetWinsize() *WinsizeEntry {
	if m != nil {
		return m.Winsize
	}
	return nil
}

func (m *TtyInfoEntry) GetPty() *TtyPtyEntry {
	if m != nil {
		return m.Pty
	}
	return nil
}

func (m *TtyInfoEntry) GetDev() uint32 {
	if m != nil && m.Dev != nil {
		return *m.Dev
	}
	return 0
}

func (m *TtyInfoEntry) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *TtyInfoEntry) GetGid() uint32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

type TtyFileEntry struct {
	Id        *uint32    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	TtyInfoId *uint32    `protobuf:"varint,2,req,name=tty_info_id,json=ttyInfoId" json:"tty_info_id,omitempty"`
	Flags     *uint32    `protobuf:"varint,3,req,name=flags" json:"flags,omitempty"`
	Fown      *FownEntry `protobuf:"bytes,4,req,name=fown" json:"fown,omitempty"`
	// optional sint32		mnt_id		= 5 [default = 0];
	RegfId               *uint32  `protobuf:"varint,6,opt,name=regf_id,json=regfId" json:"regf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TtyFileEntry) Reset()         { *m = TtyFileEntry{} }
func (m *TtyFileEntry) String() string { return proto.CompactTextString(m) }
func (*TtyFileEntry) ProtoMessage()    {}
func (*TtyFileEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc4be9f121ad441, []int{5}
}

func (m *TtyFileEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TtyFileEntry.Unmarshal(m, b)
}
func (m *TtyFileEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TtyFileEntry.Marshal(b, m, deterministic)
}
func (m *TtyFileEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TtyFileEntry.Merge(m, src)
}
func (m *TtyFileEntry) XXX_Size() int {
	return xxx_messageInfo_TtyFileEntry.Size(m)
}
func (m *TtyFileEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TtyFileEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TtyFileEntry proto.InternalMessageInfo

func (m *TtyFileEntry) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TtyFileEntry) GetTtyInfoId() uint32 {
	if m != nil && m.TtyInfoId != nil {
		return *m.TtyInfoId
	}
	return 0
}

func (m *TtyFileEntry) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *TtyFileEntry) GetFown() *FownEntry {
	if m != nil {
		return m.Fown
	}
	return nil
}

func (m *TtyFileEntry) GetRegfId() uint32 {
	if m != nil && m.RegfId != nil {
		return *m.RegfId
	}
	return 0
}

func init() {
	proto.RegisterEnum("TtyType", TtyType_name, TtyType_value)
	proto.RegisterType((*WinsizeEntry)(nil), "winsize_entry")
	proto.RegisterType((*TermiosEntry)(nil), "termios_entry")
	proto.RegisterType((*TtyPtyEntry)(nil), "tty_pty_entry")
	proto.RegisterType((*TtyDataEntry)(nil), "tty_data_entry")
	proto.RegisterType((*TtyInfoEntry)(nil), "tty_info_entry")
	proto.RegisterType((*TtyFileEntry)(nil), "tty_file_entry")
}

func init() {
	proto.RegisterFile("tty.proto", fileDescriptor_8dc4be9f121ad441)
}

var fileDescriptor_8dc4be9f121ad441 = []byte{
	// 643 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x89, 0xed, 0xd8, 0xce, 0xb8, 0x09, 0x66, 0xc5, 0x87, 0xa1, 0x08, 0xa2, 0x48, 0x48,
	0x15, 0x87, 0x20, 0x55, 0xe2, 0xc4, 0x01, 0xd1, 0x28, 0x87, 0x88, 0x90, 0x20, 0x37, 0xd0, 0x96,
	0x8b, 0x15, 0xec, 0x4d, 0xb4, 0xc2, 0xf5, 0x5a, 0xb6, 0x5b, 0xc7, 0xbc, 0x08, 0xef, 0xc1, 0xa3,
	0xc0, 0x0b, 0x31, 0xfb, 0xe1, 0x86, 0x4a, 0x70, 0xa8, 0x34, 0xf3, 0xff, 0xed, 0x74, 0xf7, 0x3f,
	0x33, 0x0e, 0xf4, 0xaa, 0xaa, 0x19, 0xe7, 0x05, 0xaf, 0xf8, 0x13, 0xe0, 0x79, 0x55, 0xb6, 0xf1,
	0x86, 0xd7, 0x99, 0x8a, 0x47, 0x35, 0xf4, 0x6b, 0x96, 0x95, 0xec, 0x3b, 0x8d, 0x68, 0x56, 0x15,
	0x0d, 0x79, 0x00, 0x76, 0x5d, 0x46, 0x05, 0xaf, 0x83, 0xce, 0xd0, 0x38, 0xea, 0x87, 0xdd, 0xba,
	0x0c, 0x79, 0xad, 0xe5, 0x98, 0xa7, 0x81, 0xd1, 0xca, 0x13, 0x9e, 0x92, 0x43, 0xe8, 0xa1, 0xbc,
	0xcb, 0xd9, 0x8e, 0xa6, 0x81, 0x29, 0x89, 0x5b, 0x97, 0xe7, 0x32, 0xd7, 0xb0, 0x51, 0xd0, 0x6a,
	0xe1, 0x85, 0xcc, 0x47, 0xbf, 0x3b, 0xd0, 0xaf, 0x68, 0x71, 0xc9, 0x78, 0xa9, 0x6f, 0x7e, 0x04,
	0x4e, 0x1c, 0xb1, 0x4d, 0xba, 0xde, 0xea, 0xab, 0xed, 0x78, 0x26, 0x32, 0x05, 0xb8, 0x04, 0x86,
	0x06, 0xcb, 0x3d, 0x88, 0x25, 0x30, 0x35, 0x98, 0xec, 0x41, 0x2a, 0x81, 0xa5, 0xc1, 0x5c, 0x02,
	0xb4, 0x81, 0x80, 0x65, 0x34, 0xe8, 0x2a, 0x1b, 0xf1, 0x1c, 0x13, 0xf2, 0x18, 0x5c, 0xbc, 0xba,
	0xcc, 0x29, 0x4d, 0x02, 0x5b, 0x02, 0x27, 0x9e, 0xc9, 0x54, 0x21, 0xae, 0x90, 0xa3, 0xd1, 0x52,
	0xa1, 0x7b, 0x60, 0xe1, 0xf5, 0x71, 0xe0, 0x0e, 0x4d, 0x94, 0xcd, 0x78, 0x12, 0x8f, 0x5e, 0xa0,
	0xa9, 0xaa, 0x89, 0x72, 0xfc, 0x53, 0xa6, 0xee, 0x43, 0x97, 0x65, 0x09, 0xdd, 0xb5, 0xdd, 0x94,
	0xc9, 0xe8, 0x0d, 0x0c, 0xc4, 0xb1, 0x64, 0x5d, 0xad, 0xf7, 0x6d, 0x17, 0x0a, 0x4b, 0xda, 0x83,
	0x98, 0xcd, 0x12, 0x42, 0xc0, 0x12, 0x87, 0xa4, 0xef, 0x83, 0x50, 0xc6, 0xa3, 0x9f, 0xa6, 0xaa,
	0x66, 0xd9, 0x86, 0xeb, 0xea, 0x01, 0x18, 0x37, 0x95, 0x18, 0x91, 0xa7, 0x60, 0x55, 0x4d, 0x4e,
	0x65, 0xd9, 0xe0, 0xd8, 0x1d, 0xaf, 0xaa, 0x66, 0x85, 0x79, 0x28, 0x55, 0xf2, 0x10, 0xec, 0x94,
	0xc7, 0xdf, 0xd0, 0x90, 0xe8, 0x9a, 0x1b, 0xea, 0x0c, 0xab, 0x7a, 0x74, 0x17, 0xa7, 0x57, 0x25,
	0xbb, 0xa6, 0xb2, 0x6f, 0x6e, 0xb8, 0x17, 0xc8, 0x73, 0xf0, 0xf2, 0x35, 0x9e, 0xab, 0xa2, 0x4b,
	0x9e, 0xa8, 0xfe, 0xb9, 0x21, 0x28, 0xe9, 0x03, 0x2a, 0xc4, 0x07, 0xb3, 0x64, 0x6d, 0xff, 0x44,
	0x28, 0x5e, 0x9f, 0x6f, 0x8b, 0x5c, 0xf7, 0x4d, 0xc6, 0x42, 0x2b, 0x12, 0x7a, 0x8d, 0x4d, 0x93,
	0x9a, 0x88, 0xc9, 0x11, 0x38, 0x7a, 0x15, 0x82, 0xde, 0xb0, 0x73, 0xe4, 0x1d, 0x0f, 0xc6, 0xb7,
	0x56, 0x23, 0x6c, 0x31, 0x79, 0x8d, 0xd6, 0x35, 0xd1, 0x16, 0xe0, 0x9f, 0x05, 0xed, 0x6a, 0xcd,
	0x95, 0x33, 0xbc, 0x40, 0x6f, 0x79, 0xe0, 0xe9, 0xf3, 0xb7, 0xb6, 0x3e, 0x6c, 0x31, 0x19, 0x82,
	0x89, 0xc3, 0x0b, 0x0e, 0xda, 0xff, 0xfa, 0xf7, 0x30, 0x43, 0x81, 0x84, 0x4d, 0xf1, 0xfe, 0x3e,
	0x9e, 0x40, 0x9b, 0xe2, 0xf9, 0xa8, 0x5c, 0xa1, 0xf1, 0x81, 0x52, 0x30, 0x14, 0xca, 0x16, 0x95,
	0xbb, 0x4a, 0xc1, 0x70, 0xf4, 0xa3, 0xa3, 0x86, 0xb6, 0x61, 0x29, 0xfd, 0xcf, 0xd0, 0x9e, 0x81,
	0x77, 0x33, 0x56, 0x04, 0x6a, 0xd5, 0xc5, 0x27, 0x3c, 0x43, 0x05, 0x77, 0xe1, 0x10, 0xba, 0x62,
	0x87, 0x4b, 0xb5, 0xeb, 0x27, 0xdd, 0x5f, 0x6f, 0x0d, 0xb7, 0x13, 0x2a, 0x0d, 0xa7, 0x63, 0x89,
	0xaf, 0x5a, 0x8e, 0xcd, 0x3b, 0xf6, 0xc6, 0x22, 0xd1, 0xaf, 0x96, 0x40, 0x7c, 0x12, 0x05, 0xdd,
	0x6e, 0x22, 0x39, 0x21, 0xf1, 0x2c, 0x5b, 0xa4, 0xb3, 0xe4, 0xe5, 0x19, 0x38, 0x7a, 0x3d, 0x88,
	0x07, 0xce, 0xa7, 0xc5, 0xfb, 0xc5, 0xf2, 0x6c, 0xe1, 0xdf, 0x21, 0x0e, 0x98, 0x1f, 0x57, 0x17,
	0x7e, 0x47, 0xa8, 0x93, 0xe5, 0xe2, 0x74, 0x39, 0x9f, 0xfa, 0x06, 0xb1, 0xc1, 0xf8, 0xbc, 0xf2,
	0x4d, 0xe2, 0x82, 0x35, 0x59, 0x21, 0xb6, 0x04, 0x9e, 0x9e, 0xaf, 0x22, 0x91, 0x74, 0x09, 0x80,
	0x7d, 0x3a, 0x0d, 0x67, 0xef, 0xe6, 0xbe, 0x7d, 0xe2, 0x7f, 0x19, 0xbc, 0x92, 0x3f, 0x32, 0x5f,
	0x71, 0xe9, 0x59, 0xb6, 0x2d, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x44, 0x29, 0xec, 0xb0, 0x90,
	0x04, 0x00, 0x00,
}
