// Code generated by protoc-gen-go. DO NOT EDIT.
// source: memfd.proto

package protobindings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MemfdFileEntry struct {
	Id                   *uint32    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Flags                *uint32    `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	Pos                  *uint64    `protobuf:"varint,3,req,name=pos" json:"pos,omitempty"`
	Fown                 *FownEntry `protobuf:"bytes,4,req,name=fown" json:"fown,omitempty"`
	InodeId              *uint32    `protobuf:"varint,5,req,name=inode_id,json=inodeId" json:"inode_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MemfdFileEntry) Reset()         { *m = MemfdFileEntry{} }
func (m *MemfdFileEntry) String() string { return proto.CompactTextString(m) }
func (*MemfdFileEntry) ProtoMessage()    {}
func (*MemfdFileEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_111d6439d955f6de, []int{0}
}

func (m *MemfdFileEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemfdFileEntry.Unmarshal(m, b)
}
func (m *MemfdFileEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemfdFileEntry.Marshal(b, m, deterministic)
}
func (m *MemfdFileEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemfdFileEntry.Merge(m, src)
}
func (m *MemfdFileEntry) XXX_Size() int {
	return xxx_messageInfo_MemfdFileEntry.Size(m)
}
func (m *MemfdFileEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MemfdFileEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MemfdFileEntry proto.InternalMessageInfo

func (m *MemfdFileEntry) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MemfdFileEntry) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *MemfdFileEntry) GetPos() uint64 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *MemfdFileEntry) GetFown() *FownEntry {
	if m != nil {
		return m.Fown
	}
	return nil
}

func (m *MemfdFileEntry) GetInodeId() uint32 {
	if m != nil && m.InodeId != nil {
		return *m.InodeId
	}
	return 0
}

type MemfdInodeEntry struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Uid                  *uint32  `protobuf:"varint,2,req,name=uid" json:"uid,omitempty"`
	Gid                  *uint32  `protobuf:"varint,3,req,name=gid" json:"gid,omitempty"`
	Size                 *uint64  `protobuf:"varint,4,req,name=size" json:"size,omitempty"`
	Shmid                *uint32  `protobuf:"varint,5,req,name=shmid" json:"shmid,omitempty"`
	Seals                *uint32  `protobuf:"varint,6,req,name=seals" json:"seals,omitempty"`
	InodeId              *uint64  `protobuf:"varint,7,req,name=inode_id,json=inodeId" json:"inode_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemfdInodeEntry) Reset()         { *m = MemfdInodeEntry{} }
func (m *MemfdInodeEntry) String() string { return proto.CompactTextString(m) }
func (*MemfdInodeEntry) ProtoMessage()    {}
func (*MemfdInodeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_111d6439d955f6de, []int{1}
}

func (m *MemfdInodeEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemfdInodeEntry.Unmarshal(m, b)
}
func (m *MemfdInodeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemfdInodeEntry.Marshal(b, m, deterministic)
}
func (m *MemfdInodeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemfdInodeEntry.Merge(m, src)
}
func (m *MemfdInodeEntry) XXX_Size() int {
	return xxx_messageInfo_MemfdInodeEntry.Size(m)
}
func (m *MemfdInodeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MemfdInodeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MemfdInodeEntry proto.InternalMessageInfo

func (m *MemfdInodeEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MemfdInodeEntry) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MemfdInodeEntry) GetGid() uint32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *MemfdInodeEntry) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *MemfdInodeEntry) GetShmid() uint32 {
	if m != nil && m.Shmid != nil {
		return *m.Shmid
	}
	return 0
}

func (m *MemfdInodeEntry) GetSeals() uint32 {
	if m != nil && m.Seals != nil {
		return *m.Seals
	}
	return 0
}

func (m *MemfdInodeEntry) GetInodeId() uint64 {
	if m != nil && m.InodeId != nil {
		return *m.InodeId
	}
	return 0
}

func init() {
	proto.RegisterType((*MemfdFileEntry)(nil), "memfd_file_entry")
	proto.RegisterType((*MemfdInodeEntry)(nil), "memfd_inode_entry")
}

func init() {
	proto.RegisterFile("memfd.proto", fileDescriptor_111d6439d955f6de)
}

var fileDescriptor_111d6439d955f6de = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0x9b, 0xba, 0x3a, 0x65, 0x97, 0x1a, 0x3c, 0xc4, 0xbd, 0x28, 0x7b, 0x10, 0x4f,
	0x15, 0x7c, 0x01, 0x61, 0x6f, 0x5e, 0x73, 0xf4, 0x52, 0x2a, 0x49, 0x6b, 0xa0, 0x49, 0x4a, 0x53,
	0x11, 0x7d, 0x12, 0x1f, 0xc5, 0xe7, 0xf0, 0x89, 0xcc, 0x4c, 0xa8, 0xe8, 0xed, 0xfb, 0xff, 0xcc,
	0xf4, 0xff, 0xa7, 0x50, 0x59, 0x6d, 0x7b, 0xd5, 0x4c, 0xb3, 0x5f, 0xfc, 0x1e, 0xfc, 0xb4, 0x84,
	0x95, 0x7b, 0xff, 0xe6, 0x12, 0x1f, 0x3e, 0x33, 0xa8, 0x69, 0xae, 0xed, 0xcd, 0xa8, 0x5b, 0xed,
	0x96, 0xf9, 0x9d, 0xef, 0x20, 0x37, 0x4a, 0x64, 0xd7, 0xf9, 0xed, 0x56, 0x46, 0xe2, 0x37, 0x50,
	0xf6, 0x63, 0x37, 0x04, 0x91, 0xa3, 0x75, 0xac, 0xbf, 0x1f, 0xb6, 0xfb, 0x6a, 0xc6, 0x85, 0x86,
	0x7c, 0x99, 0x9e, 0x79, 0x0d, 0xc5, 0xe4, 0x83, 0x28, 0xe2, 0x14, 0x93, 0x88, 0xfc, 0x0a, 0x18,
	0x86, 0x09, 0x16, 0xad, 0xea, 0xbe, 0x6a, 0x50, 0xa4, 0x10, 0x49, 0x0f, 0xfc, 0x12, 0x4e, 0x8d,
	0xf3, 0x4a, 0xb7, 0x31, 0xb0, 0xa4, 0xc0, 0x0d, 0xe9, 0x47, 0x75, 0xf8, 0xca, 0xe0, 0x3c, 0x55,
	0x4b, 0x13, 0xa9, 0x1b, 0x07, 0xe6, 0x3a, 0xab, 0xa9, 0xdd, 0x99, 0x24, 0xc6, 0xdc, 0xd7, 0xb8,
	0x4f, 0xed, 0x24, 0x22, 0x3a, 0x43, 0x74, 0x8a, 0xe4, 0x44, 0xc4, 0xbd, 0x60, 0x3e, 0x34, 0x35,
	0x61, 0x92, 0x98, 0x5f, 0x40, 0x19, 0x5e, 0xec, 0x6f, 0x72, 0x12, 0x78, 0x6d, 0xd0, 0xdd, 0x18,
	0xc4, 0xc9, 0x9f, 0x6b, 0xc9, 0x59, 0xaf, 0x25, 0xf1, 0xaf, 0xfa, 0x86, 0xbe, 0xba, 0x56, 0x3f,
	0xd6, 0x4f, 0xbb, 0x3b, 0xfa, 0xbf, 0xcf, 0xc6, 0x29, 0xe3, 0x86, 0xf0, 0x13, 0x00, 0x00, 0xff,
	0xff, 0x1b, 0xd5, 0x4a, 0x93, 0x8d, 0x01, 0x00, 0x00,
}
